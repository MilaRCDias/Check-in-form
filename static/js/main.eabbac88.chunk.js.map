{"version":3,"sources":["components/UserForm/index.js","components/WelcomeCheckin/index.js","components/DisplayUsersInfo/index.js","components/FinishCheckin/index.js","http/index.js","container/FormContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","error","color","fontStyle","UserForm","formValues","currentStep","handleStep","setStep","nationalityList","style","useState","userNationality","setUserNationality","userName","lastName","charAt","toUpperCase","slice","initialValue","firstName","nationality","email","phoneNumber","passportNumber","city","country","address","birthdate","birthplace","passportExpireDate","passportDateIssue","passportCityIssue","passportCountryIssue","terms","validation","Yup","shape","min","max","required","nullable","matches","test","when","is","includes","then","Box","mt","mx","Typography","variant","component","align","initialValues","validationSchema","onSubmit","values","formNewValues","flightNumber","errors","touched","handleChange","isSubmitting","m","TextField","id","name","label","fullWidth","onChange","className","disabled","value","FormControl","InputLabel","Select","labelId","e","target","MenuItem","map","option","type","InputLabelProps","shrink","FormControlLabel","control","Checkbox","Button","WelcomeCheckin","my","DisplayUsersInfo","submitForm","Object","entries","defaultValue","onClick","FinishCheckin","axios","create","baseURL","timeout","main","width","textAlign","mainMobile","FormContainer","theme","useTheme","screenSM","useMediaQuery","breakpoints","up","setFormValues","step","setNationalityList","useEffect","API","get","response","data","catch","err","res","alert","payload","post","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.eabbac88.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    error: {\n      color: \"red\",\n      fontStyle: \"italic\",\n    },\n  })\n);\n\n\n/**\n * User Form Component\n * Step 2 to user insert all informations\n */\nconst UserForm = ({\n  formValues,\n  currentStep,\n  handleStep,\n  setStep,\n  nationalityList,\n}) => {\n  const style = useStyles();\n  const [userNationality, setUserNationality] = useState(\"\");\n  const userName =\n    formValues.lastName?.charAt(0).toUpperCase() +\n    formValues.lastName?.slice(1);\n\n  /** Initital form values */\n  const initialValue = {\n    firstName: \"\",\n    lastName: formValues.lastName,\n    nationality: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    passportNumber: \"\",\n    city: \"\",\n    country: \"\",\n    address: \"\",\n    birthdate: \"\",\n    birthplace: \"\",\n    passportExpireDate: \"\",\n    passportDateIssue: \"\",\n    passportCityIssue: \"\",\n    passportCountryIssue: \"\",\n    terms: \"\",\n  };\n\n  /** Form Validation schema will validade according also to nationality */\n  const validation = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(20, \"Too Long!\")\n      .required(\"Firstname is required\"),\n    lastName: Yup.string().nullable(),\n    nationality: Yup.string().required(\"Select a nationality\"),\n    email: Yup.string().email().required(\"Email is required\"),\n    phoneNumber: Yup.string()\n      .matches(\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n        \"Invalid phone\"\n      )\n      .required(\"Phone number is required\"),\n    passportNumber: Yup.string()\n      .min(2, \"Too Short!\")\n      .required(\"enter a valid passport number\")\n      .test({\n        test: function (passportNumber) {\n          const isValid = /[!@#$%^&*(),.?\":{}|<>]/.test(passportNumber);\n          return !isValid;\n        },\n      }),\n    city: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Austria\", \"Belgium\", \"France\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    country: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Austria\", \"Belgium\", \"France\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    address: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Belgium\", \"Spain\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    birthdate: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Belgium\", \"France\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    birthplace: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"France\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n\n    passportExpireDate: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Austria\", \"Greece\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    passportDateIssue: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Greece\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    passportCityIssue: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Greece\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    passportCountryIssue: Yup.string()\n      .nullable()\n      .when(\"nationality\", {\n        is: () => [\"Greece\"].includes(userNationality),\n        then: Yup.string().nullable().required(\"required\"),\n      }),\n    terms: Yup.boolean().required(\"Terms and conditions are required\"),\n  });\n\n  /**\n   *  Handle submit form values and set next step\n   * @param {object} values\n   */\n  const onSubmitForm = (values) => {\n    const formNewValues = {\n      flightNumber: formValues.flightNumber,\n      ...values,\n    };\n    handleStep(formNewValues);\n    setStep(3);\n  };\n\n  return (\n    <div>\n      {currentStep === 2 ? (\n        <div>\n          {\" \"}\n          <Box mt={8} mx={4}>\n            <Typography\n              variant=\"h4\"\n              component=\"h1\"\n              align=\"left\"\n              color=\"textSecondary\"\n            >\n              {\" \"}\n              Hi, {userName}{\" \"}\n            </Typography>\n            <Typography variant=\"body1\" align=\"left\" color=\"textSecondary\">\n              Please fill your informations\n            </Typography>\n          </Box>\n          <Formik\n            initialValues={initialValue}\n            validationSchema={validation}\n            onSubmit={onSubmitForm}\n          >\n            {({ errors, touched, handleChange, isSubmitting }) => {\n              const handleInfoChange = (e) => {\n                handleChange(e);\n                setUserNationality(e.target.value);\n              };\n\n              return (\n                <Form>\n                  <Box m={4}>\n                    <TextField\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      label=\"first name\"\n                      fullWidth\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      error={!!errors.firstName}\n                    />\n                    {errors.firstName && touched.firstName ? (\n                      <div className={style.error}>{errors.firstName}</div>\n                    ) : null}\n                  </Box>\n                  <Box m={4}>\n                    <TextField\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      label=\"Last Name\"\n                      disabled\n                      fullWidth\n                      variant=\"outlined\"\n                      value={formValues.lastName}\n                      onChange={handleChange}\n                      error={!!errors.lastName}\n                    />\n                    {errors.lastName && touched.lastName ? (\n                      <div className={style.error}>{errors.lastName}</div>\n                    ) : null}\n                  </Box>\n                  <Box m={4}>\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      error={!!errors.nationality}\n                    >\n                      <InputLabel id=\"nationality\">Nationality</InputLabel>\n                      <Select\n                        labelId=\"nationality\"\n                        id=\"nationality\"\n                        name=\"nationality\"\n                        label=\"Nationality\"\n                        value={userNationality}\n                        onChange={handleInfoChange}\n                      >\n                        <MenuItem value=\"\" disabled>\n                          Choose\n                        </MenuItem>\n                        {nationalityList.map((option) => (\n                          <MenuItem key={option} value={option}>\n                            {option}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                      {errors.nationality && touched.nationality ? (\n                        <div className={style.error}>{errors.nationality}</div>\n                      ) : null}\n                    </FormControl>\n                  </Box>\n                  {[\"Austria\", \"France\"].includes(userNationality) ? (\n                    <Box>\n                      <Box m={4}>\n                        <TextField\n                          id=\"city\"\n                          name=\"city\"\n                          label=\"City of residence\"\n                          fullWidth\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          error={!!errors.city}\n                        />\n                        {errors.city && touched.city ? (\n                          <div className={style.error}>{errors.city}</div>\n                        ) : null}\n                      </Box>\n                      <Box m={4}>\n                        <TextField\n                          id=\"country\"\n                          name=\"country\"\n                          label=\"Country of residence\"\n                          fullWidth\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          error={!!errors.country}\n                        />\n                        {errors.country && touched.country ? (\n                          <div className={style.error}>{errors.country}</div>\n                        ) : null}\n                      </Box>\n                    </Box>\n                  ) : null}\n                  {[\"Belgium\", \"Spain\"].includes(userNationality) ? (\n                    <Box m={4}>\n                      <TextField\n                        id=\"address\"\n                        label=\"Address\"\n                        name=\"address\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                        error={!!errors.address}\n                      />\n                      {errors.address && touched.address ? (\n                        <div className={style.error}>{errors.address}</div>\n                      ) : null}\n                    </Box>\n                  ) : null}\n\n                  {[\"Belgium\", \"France\"].includes(userNationality) ? (\n                    <Box m={4}>\n                      <TextField\n                        id=\"birthdate\"\n                        label=\"Date of birth\"\n                        name=\"birthdate\"\n                        type=\"date\"\n                        fullWidth\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        onChange={handleChange}\n                        error={!!errors.birthdate}\n                      />\n                      {errors.birthdate && touched.birthdate ? (\n                        <div className={style.error}>{errors.birthdate}</div>\n                      ) : null}\n                    </Box>\n                  ) : null}\n                  {userNationality === \"France\" ? (\n                    <Box m={4}>\n                      <TextField\n                        id=\"birthplace\"\n                        name=\"birthplace\"\n                        label=\"Place of birth\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                        error={!!errors.birthplace}\n                      />\n                      {errors.birthplace && touched.birthplace ? (\n                        <div className={style.error}>{errors.birthplace}</div>\n                      ) : null}\n                    </Box>\n                  ) : null}\n                  <Box m={4}>\n                    <TextField\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"email\"\n                      fullWidth\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      error={!!errors.email}\n                    />\n                    {errors.email && touched.email ? (\n                      <div className={style.error}>{errors.email}</div>\n                    ) : null}\n                  </Box>\n                  <Box m={4}>\n                    <TextField\n                      id=\"phoneNumber\"\n                      name=\"phoneNumber\"\n                      label=\"Phone Number\"\n                      fullWidth\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      error={!!errors.phoneNumber}\n                    />\n                    {errors.phoneNumber && touched.phoneNumber ? (\n                      <div className={style.error}>{errors.phoneNumber}</div>\n                    ) : null}\n                  </Box>\n                  <Box m={4}>\n                    <TextField\n                      id=\"passportNumber\"\n                      name=\"passportNumber\"\n                      label=\"Passport Number\"\n                      fullWidth\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      error={!!errors.passportNumber}\n                    />\n                    {errors.passportNumber && touched.passportNumber ? (\n                      <div className={style.error}>{errors.passportNumber}</div>\n                    ) : null}\n                  </Box>\n                  {[\"Austria\", \"Greece\"].includes(userNationality) ? (\n                    <Box m={4}>\n                      <TextField\n                        id=\"passportExpireDate\"\n                        name=\"passportExpireDate\"\n                        label=\"Passport expire date\"\n                        type=\"date\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        error={!!errors.passportExpireDate}\n                      />\n                      {errors.passportExpireDate &&\n                      touched.passportExpireDate ? (\n                        <div className={style.error}>\n                          {errors.passportExpireDate}\n                        </div>\n                      ) : null}\n                    </Box>\n                  ) : null}\n                  {userNationality === \"Greece\" ? (\n                    <Box>\n                      <Box m={4}>\n                        <TextField\n                          id=\"passportDateIssue\"\n                          name=\"passportDateIssue\"\n                          label=\"Passport date of issue\"\n                          type=\"date\"\n                          fullWidth\n                          variant=\"outlined\"\n                          InputLabelProps={{\n                            shrink: true,\n                          }}\n                          onChange={handleChange}\n                          error={!!errors.passportDateIssue}\n                        />\n                        {errors.passportDateIssue &&\n                        touched.passportDateIssue ? (\n                          <div className={style.error}>\n                            {errors.passportDateIssue}\n                          </div>\n                        ) : null}\n                      </Box>\n                      <Box m={4}>\n                        <TextField\n                          id=\"passportCityIssue\"\n                          name=\"passportCityIssue\"\n                          label=\"Passport city of issue\"\n                          fullWidth\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          error={!!errors.passportCityIssue}\n                        />\n                        {errors.passportCityIssue &&\n                        touched.passportCityIssue ? (\n                          <div className={style.error}>\n                            {errors.passportCityIssue}\n                          </div>\n                        ) : null}\n                      </Box>\n                      <Box m={4}>\n                        <TextField\n                          id=\"passportCountryIssue\"\n                          name=\"passportCountryIssue\"\n                          label=\"Passport country of issue\"\n                          fullWidth\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          error={!!errors.passportCountryIssue}\n                        />\n                        {errors.passportCountryIssue &&\n                        touched.passportCountryIssue ? (\n                          <div className={style.error}>\n                            {errors.passportCountryIssue}\n                          </div>\n                        ) : null}\n                      </Box>\n                    </Box>\n                  ) : null}\n                  <Box m={4}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          onChange={handleChange}\n                          name=\"terms\"\n                          color=\"primary\"\n                          error={errors.terms}\n                        />\n                      }\n                      label=\"Terms & conditions\"\n                    />\n                    {errors.terms && touched.terms ? (\n                      <div className={style.error}>{errors.terms}</div>\n                    ) : null}\n                  </Box>\n                  <Button\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Continue\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\n UserForm.propTypes = {\n   /** the number of the form step */\n   currentStep: PropTypes.number.isRequired,\n   /** handle submit form */\n   handleStep: PropTypes.func.isRequired,\n   /** object with form information */\n   formValues: PropTypes.shape({}).isRequired,\n   /** set next step */\n   setStep: PropTypes.func.isRequired,\n   /** array with nationality list */\n   nationalityList: PropTypes.array.isRequired,\n };\n\n\n\nexport default UserForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Box, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    error: {\n      color: \"red\",\n      fontStyle: \"italic\",\n    },\n  })\n);\n\n/**\n * Welcome checkin component\n * Step 1 of checkin form\n */\nconst WelcomeCheckin = ({ handleStep, currentStep }) => {\n  const style = useStyles();\n\n  /** Validation schema */\n  const validation = Yup.object().shape({\n    flightNumber: Yup.string()\n      .min(2, \"Too Short!\")\n      .required(\"Enter a valid flight number. No special character allow\")\n      .test({\n        test: function (flightNumber) {\n          const isValid = /[!@#$%^&*(),.?\":{}|<>]/.test(flightNumber);\n          return !isValid;\n        },\n      }),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Lastname is required\"),\n  });\n\n  /** submit values to parent/container component */\n  const onSubmitForm = (values) => {\n      handleStep(values);\n  };\n\n  return (\n    <div>\n      {currentStep === 1 ? (\n        <Box my={8} mx={4}>\n          <Typography\n            variant=\"h4\"\n            component=\"h1\"\n            align=\"left\"\n            color=\"textSecondary\"\n          >\n            {\" \"}\n            Welcome to your web check-in\n          </Typography>\n          <Formik\n            initialValues={{ flightNumber: \"\", lastName: \"\" }}\n            validationSchema={validation}\n            onSubmit={onSubmitForm}\n          >\n            {({ errors, touched, handleChange, isSubmitting }) => {\n              return (\n                <Form>\n                  <Box my={6}>\n                    <TextField\n                      id=\"flightNumber\"\n                      label=\"Flight Number\"\n                      onChange={handleChange}\n                      error={!!errors.flightNumber}\n                      fullWidth\n                      variant=\"outlined\"\n                    />\n                    {errors.flightNumber && touched.flightNumber ? (\n                      <div className={style.error}>{errors.flightNumber}</div>\n                    ) : null}\n                  </Box>\n\n                  <Box>\n                    <TextField\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      onChange={handleChange}\n                      error={!!errors.lastName}\n                      fullWidth\n                      variant=\"outlined\"\n                    />\n                    {errors.lastName && touched.lastName ? (\n                      <div className={style.error}>{errors.lastName}</div>\n                    ) : null}\n                  </Box>\n                  <br />\n                  <br />\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Box>\n      ) : null}\n    </div>\n  );\n};\n\nWelcomeCheckin.propTypes = {\n  /** handle submit form */\n  handleStep: PropTypes.func.isRequired,\n  /**the number of the form step */\n  currentStep: PropTypes.number.isRequired,\n};\n\nexport default WelcomeCheckin;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Button, TextField, Box, Typography } from \"@material-ui/core\";\n\n/**\n * Display user info component\n * Step 3 to confirm information\n */\nconst DisplayUsersInfo = ({ formValues, currentStep, submitForm }) => {\n  return (\n    <Box mx={4} my={8}>\n      {currentStep === 3 ? (\n        <>\n          <Typography\n            variant=\"h4\"\n            component=\"h1\"\n            align=\"left\"\n            color=\"textSecondary\"\n          >\n            Please review your information{\" \"}\n          </Typography>\n\n          {formValues &&\n            Object.entries(formValues).map((value) => {\n              return (\n                <>\n                  {value[1] !== \"\" && value[1] !== true ? (\n                    <Box m={4} key={`id_${value[0]}`}>\n                      <TextField\n                        disabled\n                        defaultValue={value[1]}\n                        label={value[0]}\n                        fullWidth\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                  ) : null}\n                </>\n              );\n            })}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            Confirm\n          </Button>\n        </>\n      ) : null}\n    </Box>\n  );\n};\n\nDisplayUsersInfo.propTypes = {\n  /** object with form information */\n  formValues: PropTypes.shape({}).isRequired,\n  /** the number of the form step */\n  currentStep: PropTypes.number.isRequired,\n  /** handle submit form */\n  submitForm: PropTypes.func.isRequired,\n};\nexport default DisplayUsersInfo;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\n\n\n/**\n * \n * Step 4 and last\n */\nconst FinishCheckin = ({ currentStep }) => {\n  return (\n    <Box m={8}>\n      {currentStep === 4 ? (\n        <div>\n          <Typography\n            variant=\"h3\"\n            component=\"h3\"\n            align=\"left\"\n            color=\"textSecondary\"\n          >\n            Your check-in is confirmed\n          </Typography>\n        </div>\n      ) : null}\n    </Box>\n  );\n};\n\nFinishCheckin.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n};\n\nexport default FinishCheckin;","import axios from \"axios\";\n\n/**\n * Axios api\n */\nexport default axios.create({\n  baseURL: \" http://localhost:3000/\",\n  timeout: 1000,\n});\n","import React, { useState, useEffect } from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core/styles\";\nimport UserForm from \"../../components/UserForm\";\nimport WelcomeCheckin from \"../../components/WelcomeCheckin\";\nimport DisplayUsersInfo from \"../../components/DisplayUsersInfo\";\nimport FinishCheckin from \"../../components/FinishCheckin\";\nimport API from \"../../http\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    main: {\n      width: \"30rem\",\n      textAlign: \"center\",\n    },\n    mainMobile: {\n      width: \"100%\",\n      textAlign: \"center\",\n    },\n  })\n);\n\n/**\n * Form Container Component\n * Main Container with form steps\n */\nconst FormContainer = () => {\n  const theme = useTheme();\n  const screenSM = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const style = useStyles();\n\n  const [formValues, setFormValues] = useState({});\n  const [step, setStep] = useState(1);\n  const [nationalityList, setNationalityList] = useState([]);\n\n  /** Get from API flight number and lastname\n   * it verifies if checkin was already been made\n   */\n  const submitFirstCheckinInfo = (values) => {\n    API.get(\"checkin\")\n      .then((res) => {\n        res.data.map((data) => {\n          if (\n            data.flightNumber === values.flightNumber &&\n            data.lastName === values.lastName\n          ) {\n            alert(\n              \"This checkin was been done already. Please enter new information\"\n            );\n            setStep(1);\n          } else {\n            setFormValues(values);\n            setStep(2);\n          }\n        });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  };\n  /**\n   * Get from API a list of nationalities\n   * when user goes to step 2\n   */\n  useEffect(() => {\n    API.get(\"/nationality\")\n      .then((response) => {\n        setNationalityList(response.data);\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }, [step === 2]);\n\n  /** Submit Post to api */\n  const submitForm = () => {\n    const payload = {\n      id: `${formValues.lastName}_${formValues.flightNumber}`,\n      ...formValues,\n    };\n\n    API.post(\"/checkin\", payload)\n      .then(() => {\n        setStep(4);\n      })\n      .catch((err) => {\n        throw err;\n      });\n  };\n\n  return (\n    <Box mx=\"auto\" className={screenSM ? style.main : style.mainMobile}>\n      <WelcomeCheckin currentStep={step} handleStep={submitFirstCheckinInfo} />\n      <UserForm\n        currentStep={step}\n        formValues={formValues}\n        handleStep={setFormValues}\n        setStep={setStep}\n        nationalityList={nationalityList}\n      />\n      <DisplayUsersInfo\n        currentStep={step}\n        formValues={formValues}\n        submitForm={submitForm}\n      />\n      <FinishCheckin currentStep={step} />\n    </Box>\n  );\n};\nexport default FormContainer;\n","import React from \"react\";\nimport FormContainer from './container/FormContainer/'\n\n/**\n *   Main app View\n */\nconst  App=()=> {\n  return (\n    <div>\n     <FormContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst theme = createMuiTheme();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}